
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL CASE COLON COMMA CONST CONST10 CONST16 CONST8 DEFAULT DOUBLE ENUM EQUALS FLOAT GT HYPER ID INT LBRACE LBRACKET LPAREN LT OPAQUE PROGRAM QUADRUPLE RBRACE RBRACKET RPAREN SEMI STAR STRING STRUCT SWITCH TYPEDEF UNION UNSIGNED VERSION VOIDspecification : definition_listdefinition_list : definition definition_list \n                       | emptydefinition : constant_def\n                  | type_def\n                  | program_defconstant_def : CONST ID EQUALS constant SEMIconstant : CONST10\n                | CONST8\n                | CONST16value : constant\n             | IDoptional_value : value\n                      | emptytype_def : TYPEDEF declaration SEMItype_def : ENUM ID enum_body SEMItype_def : STRUCT ID struct_body SEMItype_def : UNION ID union_body SEMIdeclaration : type_specifier IDdeclaration : type_specifier ID LBRACKET value RBRACKET\n                   | type_specifier ID LT optional_value GT\n                   | OPAQUE ID LBRACKET value RBRACKET\n                   | OPAQUE ID LT optional_value GT\n                   | STRING ID LT optional_value GTdeclaration : type_specifier STAR IDdeclaration : VOIDtype_specifier : UNSIGNED INT\n                      | UNSIGNED HYPERtype_specifier : INT\n                      | HYPER\n                      | FLOAT\n                      | DOUBLE\n                      | QUADRUPLE\n                      | BOOL\n                      | ID\n                      | UNSIGNED\n                      | enum_type_spec\n                      | struct_type_spec\n                      | union_type_specenum_type_spec : ENUM enum_bodystruct_type_spec : STRUCT struct_bodyunion_type_spec : UNION union_bodyunion_body : SWITCH LPAREN declaration RPAREN LBRACE switch_body RBRACEswitch_body : case_spec_list default_declarationcase_spec : case_statement_list declaration SEMIcase_spec_list      : case_spec case_spec_list\n                           | case_spec\n       case_statement_list : case_statement case_statement_list\n                           | case_statementcase_statement : CASE value COLONdefault_declaration : emptydefault_declaration : DEFAULT COLON declaration SEMIstruct_body : LBRACE declaration_list RBRACEdeclaration_list : declaration SEMIdeclaration_list : declaration SEMI declaration_listenum_body : LBRACE enum_constant_list RBRACEenum_constant : ID EQUALS valueenum_constant_list : enum_constantenum_constant_list : enum_constant COMMA enum_constant_listempty :program_def : PROGRAM ID LBRACE version_def version_def_list RBRACE EQUALS constant SEMIversion_def :  VERSION ID LBRACE procedure_def procedure_def_list RBRACE EQUALS constant SEMIversion_def_list : version_def version_def_list\n                        | emptyprocedure_def : proc_return ID LPAREN proc_firstarg  type_specifier_list RPAREN EQUALS constant SEMIprocedure_def_list : procedure_def procedure_def_list\n                          | emptyproc_return : type_specifier\n                   | VOIDproc_firstarg : type_specifier\n                     | VOIDtype_specifier_list : COMMA type_specifier type_specifier_list\n                           | empty'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,14,40,73,74,75,78,135,],[-60,0,-1,-60,-3,-4,-5,-6,-2,-15,-16,-17,-18,-7,-61,]),'CONST':([0,3,5,6,7,40,73,74,75,78,135,],[8,8,-4,-5,-6,-15,-16,-17,-18,-7,-61,]),'TYPEDEF':([0,3,5,6,7,40,73,74,75,78,135,],[9,9,-4,-5,-6,-15,-16,-17,-18,-7,-61,]),'ENUM':([0,3,5,6,7,9,40,50,72,73,74,75,78,92,109,112,119,120,123,133,135,138,139,141,149,158,],[10,10,-4,-5,-6,32,-15,32,32,-16,-17,-18,-7,32,32,32,32,-49,32,-48,-61,32,32,-50,32,-65,]),'STRUCT':([0,3,5,6,7,9,40,50,72,73,74,75,78,92,109,112,119,120,123,133,135,138,139,141,149,158,],[11,11,-4,-5,-6,33,-15,33,33,-16,-17,-18,-7,33,33,33,33,-49,33,-48,-61,33,33,-50,33,-65,]),'UNION':([0,3,5,6,7,9,40,50,72,73,74,75,78,92,109,112,119,120,123,133,135,138,139,141,149,158,],[12,12,-4,-5,-6,34,-15,34,34,-16,-17,-18,-7,34,34,34,34,-49,34,-48,-61,34,34,-50,34,-65,]),'PROGRAM':([0,3,5,6,7,40,73,74,75,78,135,],[13,13,-4,-5,-6,-15,-16,-17,-18,-7,-61,]),'ID':([8,9,10,11,12,13,17,18,19,20,22,23,24,25,26,27,28,29,30,31,42,45,46,47,48,49,50,51,61,62,64,65,66,72,77,88,89,90,91,92,109,112,113,114,115,119,120,121,123,127,133,138,139,141,149,158,],[15,18,35,36,37,38,41,-35,43,44,-36,-29,-30,-31,-32,-33,-34,-37,-38,-39,63,-27,-28,-40,69,-41,18,-42,79,79,79,79,79,18,97,-56,69,79,-53,18,18,18,126,-68,-69,18,-49,79,18,-43,-48,18,18,-50,18,-65,]),'OPAQUE':([9,50,72,92,119,120,133,139,141,],[19,19,19,19,19,-49,-48,19,-50,]),'STRING':([9,50,72,92,119,120,133,139,141,],[20,20,20,20,20,-49,-48,20,-50,]),'VOID':([9,50,72,92,109,112,119,120,123,133,138,139,141,158,],[21,21,21,21,115,115,21,-49,115,-48,145,21,-50,-65,]),'UNSIGNED':([9,50,72,92,109,112,119,120,123,133,138,139,141,149,158,],[22,22,22,22,22,22,22,-49,22,-48,22,22,-50,22,-65,]),'INT':([9,22,50,72,92,109,112,119,120,123,133,138,139,141,149,158,],[23,45,23,23,23,23,23,23,-49,23,-48,23,23,-50,23,-65,]),'HYPER':([9,22,50,72,92,109,112,119,120,123,133,138,139,141,149,158,],[24,46,24,24,24,24,24,24,-49,24,-48,24,24,-50,24,-65,]),'FLOAT':([9,50,72,92,109,112,119,120,123,133,138,139,141,149,158,],[25,25,25,25,25,25,25,-49,25,-48,25,25,-50,25,-65,]),'DOUBLE':([9,50,72,92,109,112,119,120,123,133,138,139,141,149,158,],[26,26,26,26,26,26,26,-49,26,-48,26,26,-50,26,-65,]),'QUADRUPLE':([9,50,72,92,109,112,119,120,123,133,138,139,141,149,158,],[27,27,27,27,27,27,27,-49,27,-48,27,27,-50,27,-65,]),'BOOL':([9,50,72,92,109,112,119,120,123,133,138,139,141,149,158,],[28,28,28,28,28,28,28,-49,28,-48,28,28,-50,28,-65,]),'EQUALS':([15,69,108,137,153,],[39,90,111,142,155,]),'SEMI':([16,21,41,53,54,55,57,58,59,60,63,71,88,91,98,99,100,101,102,122,127,132,146,147,157,],[40,-26,-19,73,74,75,78,-8,-9,-10,-25,92,-56,-53,-20,-21,-22,-23,-24,135,-43,140,151,152,158,]),'STAR':([17,18,22,23,24,25,26,27,28,29,30,31,45,46,47,49,51,88,91,127,],[42,-35,-36,-29,-30,-31,-32,-33,-34,-37,-38,-39,-27,-28,-40,-41,-42,-56,-53,-43,]),'COMMA':([18,22,23,24,25,26,27,28,29,30,31,45,46,47,49,51,58,59,60,68,79,81,88,91,104,127,143,144,145,154,],[-35,-36,-29,-30,-31,-32,-33,-34,-37,-38,-39,-27,-28,-40,-41,-42,-8,-9,-10,89,-12,-11,-56,-53,-57,-43,149,-70,-71,149,]),'RPAREN':([18,21,22,23,24,25,26,27,28,29,30,31,41,45,46,47,49,51,63,88,91,93,98,99,100,101,102,127,143,144,145,148,150,154,156,],[-35,-26,-36,-29,-30,-31,-32,-33,-34,-37,-38,-39,-19,-27,-28,-40,-41,-42,-25,-56,-53,106,-20,-21,-22,-23,-24,-43,-60,-70,-71,153,-73,-60,-72,]),'LBRACE':([32,33,35,36,38,97,106,],[48,50,48,50,56,109,110,]),'SWITCH':([34,37,],[52,52,]),'CONST10':([39,61,62,64,65,66,90,111,121,142,155,],[58,58,58,58,58,58,58,58,58,58,58,]),'CONST8':([39,61,62,64,65,66,90,111,121,142,155,],[59,59,59,59,59,59,59,59,59,59,59,]),'CONST16':([39,61,62,64,65,66,90,111,121,142,155,],[60,60,60,60,60,60,60,60,60,60,60,]),'LBRACKET':([41,43,],[61,64,]),'LT':([41,43,44,],[62,65,66,]),'LPAREN':([52,126,],[72,138,]),'VERSION':([56,76,94,152,],[77,77,77,-62,]),'RBRACKET':([58,59,60,79,80,81,85,],[-8,-9,-10,-12,98,-11,100,]),'GT':([58,59,60,62,65,66,79,81,82,83,84,86,87,],[-8,-9,-10,-60,-60,-60,-12,-11,99,-13,-14,101,102,]),'RBRACE':([58,59,60,67,68,70,76,79,81,92,94,95,96,103,104,105,107,112,116,117,118,123,124,125,128,129,131,136,140,151,152,158,],[-8,-9,-10,88,-58,91,-60,-12,-11,-54,-60,108,-64,-59,-57,-55,-63,-60,127,-60,-47,-60,137,-67,-44,-51,-46,-66,-45,-52,-62,-65,]),'COLON':([58,59,60,79,81,130,134,],[-8,-9,-10,-12,-11,139,141,]),'CASE':([110,118,120,140,141,],[121,121,121,-45,-50,]),'DEFAULT':([117,118,131,140,],[130,-47,-46,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'specification':([0,],[1,]),'definition_list':([0,3,],[2,14,]),'definition':([0,3,],[3,3,]),'empty':([0,3,62,65,66,76,94,112,117,123,143,154,],[4,4,84,84,84,96,96,125,129,125,150,150,]),'constant_def':([0,3,],[5,5,]),'type_def':([0,3,],[6,6,]),'program_def':([0,3,],[7,7,]),'declaration':([9,50,72,92,119,139,],[16,71,93,71,132,146,]),'type_specifier':([9,50,72,92,109,112,119,123,138,139,149,],[17,17,17,17,114,114,17,114,144,17,154,]),'enum_type_spec':([9,50,72,92,109,112,119,123,138,139,149,],[29,29,29,29,29,29,29,29,29,29,29,]),'struct_type_spec':([9,50,72,92,109,112,119,123,138,139,149,],[30,30,30,30,30,30,30,30,30,30,30,]),'union_type_spec':([9,50,72,92,109,112,119,123,138,139,149,],[31,31,31,31,31,31,31,31,31,31,31,]),'enum_body':([32,35,],[47,53,]),'struct_body':([33,36,],[49,54,]),'union_body':([34,37,],[51,55,]),'constant':([39,61,62,64,65,66,90,111,121,142,155,],[57,81,81,81,81,81,81,122,81,147,157,]),'enum_constant_list':([48,89,],[67,103,]),'enum_constant':([48,89,],[68,68,]),'declaration_list':([50,92,],[70,105,]),'version_def':([56,76,94,],[76,94,94,]),'value':([61,62,64,65,66,90,121,],[80,83,85,83,83,104,134,]),'optional_value':([62,65,66,],[82,86,87,]),'version_def_list':([76,94,],[95,107,]),'procedure_def':([109,112,123,],[112,123,123,]),'proc_return':([109,112,123,],[113,113,113,]),'switch_body':([110,],[116,]),'case_spec_list':([110,118,],[117,131,]),'case_spec':([110,118,],[118,118,]),'case_statement_list':([110,118,120,],[119,119,133,]),'case_statement':([110,118,120,],[120,120,120,]),'procedure_def_list':([112,123,],[124,136,]),'default_declaration':([117,],[128,]),'proc_firstarg':([138,],[143,]),'type_specifier_list':([143,154,],[148,156,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> specification","S'",1,None,None,None),
  ('specification -> definition_list','specification',1,'p_specification','xdrgen.py',320),
  ('definition_list -> definition definition_list','definition_list',2,'p_definition_list','xdrgen.py',323),
  ('definition_list -> empty','definition_list',1,'p_definition_list','xdrgen.py',324),
  ('definition -> constant_def','definition',1,'p_definition','xdrgen.py',327),
  ('definition -> type_def','definition',1,'p_definition','xdrgen.py',328),
  ('definition -> program_def','definition',1,'p_definition','xdrgen.py',329),
  ('constant_def -> CONST ID EQUALS constant SEMI','constant_def',5,'p_constant_def','xdrgen.py',332),
  ('constant -> CONST10','constant',1,'p_constant','xdrgen.py',341),
  ('constant -> CONST8','constant',1,'p_constant','xdrgen.py',342),
  ('constant -> CONST16','constant',1,'p_constant','xdrgen.py',343),
  ('value -> constant','value',1,'p_value','xdrgen.py',347),
  ('value -> ID','value',1,'p_value','xdrgen.py',348),
  ('optional_value -> value','optional_value',1,'p_optional_value','xdrgen.py',352),
  ('optional_value -> empty','optional_value',1,'p_optional_value','xdrgen.py',353),
  ('type_def -> TYPEDEF declaration SEMI','type_def',3,'p_type_def_1','xdrgen.py',377),
  ('type_def -> ENUM ID enum_body SEMI','type_def',4,'p_type_def_2','xdrgen.py',400),
  ('type_def -> STRUCT ID struct_body SEMI','type_def',4,'p_type_def_3','xdrgen.py',409),
  ('type_def -> UNION ID union_body SEMI','type_def',4,'p_type_def_4','xdrgen.py',417),
  ('declaration -> type_specifier ID','declaration',2,'p_declaration_1','xdrgen.py',425),
  ('declaration -> type_specifier ID LBRACKET value RBRACKET','declaration',5,'p_declaration_2','xdrgen.py',430),
  ('declaration -> type_specifier ID LT optional_value GT','declaration',5,'p_declaration_2','xdrgen.py',431),
  ('declaration -> OPAQUE ID LBRACKET value RBRACKET','declaration',5,'p_declaration_2','xdrgen.py',432),
  ('declaration -> OPAQUE ID LT optional_value GT','declaration',5,'p_declaration_2','xdrgen.py',433),
  ('declaration -> STRING ID LT optional_value GT','declaration',5,'p_declaration_2','xdrgen.py',434),
  ('declaration -> type_specifier STAR ID','declaration',3,'p_declaration_3','xdrgen.py',447),
  ('declaration -> VOID','declaration',1,'p_declaration_4','xdrgen.py',458),
  ('type_specifier -> UNSIGNED INT','type_specifier',2,'p_type_specifier_1','xdrgen.py',462),
  ('type_specifier -> UNSIGNED HYPER','type_specifier',2,'p_type_specifier_1','xdrgen.py',463),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_2','xdrgen.py',467),
  ('type_specifier -> HYPER','type_specifier',1,'p_type_specifier_2','xdrgen.py',468),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_2','xdrgen.py',469),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_2','xdrgen.py',470),
  ('type_specifier -> QUADRUPLE','type_specifier',1,'p_type_specifier_2','xdrgen.py',471),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier_2','xdrgen.py',472),
  ('type_specifier -> ID','type_specifier',1,'p_type_specifier_2','xdrgen.py',473),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_2','xdrgen.py',474),
  ('type_specifier -> enum_type_spec','type_specifier',1,'p_type_specifier_2','xdrgen.py',475),
  ('type_specifier -> struct_type_spec','type_specifier',1,'p_type_specifier_2','xdrgen.py',476),
  ('type_specifier -> union_type_spec','type_specifier',1,'p_type_specifier_2','xdrgen.py',477),
  ('enum_type_spec -> ENUM enum_body','enum_type_spec',2,'p_enum_type_spec','xdrgen.py',485),
  ('struct_type_spec -> STRUCT struct_body','struct_type_spec',2,'p_struct_type_spec','xdrgen.py',489),
  ('union_type_spec -> UNION union_body','union_type_spec',2,'p_union_type_spec','xdrgen.py',493),
  ('union_body -> SWITCH LPAREN declaration RPAREN LBRACE switch_body RBRACE','union_body',7,'p_union_body','xdrgen.py',497),
  ('switch_body -> case_spec_list default_declaration','switch_body',2,'p_switch_body','xdrgen.py',501),
  ('case_spec -> case_statement_list declaration SEMI','case_spec',3,'p_case_spec','xdrgen.py',506),
  ('case_spec_list -> case_spec case_spec_list','case_spec_list',2,'p_nonempty_lists','xdrgen.py',512),
  ('case_spec_list -> case_spec','case_spec_list',1,'p_nonempty_lists','xdrgen.py',513),
  ('case_statement_list -> case_statement case_statement_list','case_statement_list',2,'p_nonempty_lists','xdrgen.py',514),
  ('case_statement_list -> case_statement','case_statement_list',1,'p_nonempty_lists','xdrgen.py',515),
  ('case_statement -> CASE value COLON','case_statement',3,'p_case_statement','xdrgen.py',522),
  ('default_declaration -> empty','default_declaration',1,'p_default_declaration_1','xdrgen.py',526),
  ('default_declaration -> DEFAULT COLON declaration SEMI','default_declaration',4,'p_default_declaration_','xdrgen.py',530),
  ('struct_body -> LBRACE declaration_list RBRACE','struct_body',3,'p_struct_body','xdrgen.py',534),
  ('declaration_list -> declaration SEMI','declaration_list',2,'p_declaration_list_1','xdrgen.py',539),
  ('declaration_list -> declaration SEMI declaration_list','declaration_list',3,'p_declaration_list_2','xdrgen.py',543),
  ('enum_body -> LBRACE enum_constant_list RBRACE','enum_body',3,'p_enum_body','xdrgen.py',547),
  ('enum_constant -> ID EQUALS value','enum_constant',3,'p_enum_constant','xdrgen.py',552),
  ('enum_constant_list -> enum_constant','enum_constant_list',1,'p_enum_constant_list_1','xdrgen.py',575),
  ('enum_constant_list -> enum_constant COMMA enum_constant_list','enum_constant_list',3,'p_enum_constant_list_2','xdrgen.py',579),
  ('empty -> <empty>','empty',0,'p_empty','xdrgen.py',583),
  ('program_def -> PROGRAM ID LBRACE version_def version_def_list RBRACE EQUALS constant SEMI','program_def',9,'p_program_def','xdrgen.py',598),
  ('version_def -> VERSION ID LBRACE procedure_def procedure_def_list RBRACE EQUALS constant SEMI','version_def',9,'p_version_def','xdrgen.py',608),
  ('version_def_list -> version_def version_def_list','version_def_list',2,'p_version_def_list','xdrgen.py',617),
  ('version_def_list -> empty','version_def_list',1,'p_version_def_list','xdrgen.py',618),
  ('procedure_def -> proc_return ID LPAREN proc_firstarg type_specifier_list RPAREN EQUALS constant SEMI','procedure_def',9,'p_procedure_def','xdrgen.py',621),
  ('procedure_def_list -> procedure_def procedure_def_list','procedure_def_list',2,'p_procedure_def_list','xdrgen.py',630),
  ('procedure_def_list -> empty','procedure_def_list',1,'p_procedure_def_list','xdrgen.py',631),
  ('proc_return -> type_specifier','proc_return',1,'p_proc_return','xdrgen.py',634),
  ('proc_return -> VOID','proc_return',1,'p_proc_return','xdrgen.py',635),
  ('proc_firstarg -> type_specifier','proc_firstarg',1,'p_proc_firstarg','xdrgen.py',638),
  ('proc_firstarg -> VOID','proc_firstarg',1,'p_proc_firstarg','xdrgen.py',639),
  ('type_specifier_list -> COMMA type_specifier type_specifier_list','type_specifier_list',3,'p_type_specifier_list','xdrgen.py',642),
  ('type_specifier_list -> empty','type_specifier_list',1,'p_type_specifier_list','xdrgen.py',643),
]
